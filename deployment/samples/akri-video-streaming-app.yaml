apiVersion: apps/v1
kind: Deployment
metadata:
  name: akri-video-streaming-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: akri-video-streaming-app
  template:
    metadata:
      labels:
        app: akri-video-streaming-app
    spec:
      containers:
      - name: akri-video-streaming-app
        image: ghcr.io/deislabs/akri/video-streaming-app:latest-dev
        imagePullPolicy: Always
        env:
        # Streamer works in two modes; either specify the following commented block of env vars to explicitly target cameras or 
        # specify a Akri configuration name to pick up cameras automatically on startup
        # - name: CAMERAS_SOURCE_SVC
        #   value: "all-cameras-svc"
        # - name: CAMERA_COUNT
        #   value: "2"
        # - name: CAMERA1_SOURCE_SVC
        #   value: "akri-onvif-svc"
        # - name: CAMERA2_SOURCE_SVC
        #   value: "akri-udev-video-svc"
        - name: CONFIGURATION_NAME
          value: akri-udev-video
---
apiVersion: v1
kind: Service
metadata:
  name: akri-video-streaming-app
  namespace: default
  labels:
    app: akri-video-streaming-app
spec:
  selector:
    app: akri-video-streaming-app
  ports:
  - name: http
    port: 80
    targetPort: 5000
  type: NodePort
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: all-cameras-svc
#   namespace: default
#   labels:
#     app: akri-video-streaming-app
# spec:
#   selector:
#      matchExpressions:
#      - key: akri.sh/configuration
#        operator: In
#        values: [akri-onvif-camera, akri-udev-camera]
#   ports:
#   - name: grpc
#     port: 80
#     targetPort: 8083