name: Build OpenCV Base

on:
  push:
    branches: [ main ]
    paths:
    - .github/actions/build-intermediate/**
    - .github/workflows/build-opencv-base-container.yml
    - build/containers/intermediate/Dockerfile.opencvsharp-build
    - build/intermediate-containers.mk
    - Makefile
  pull_request:
    branches: [ main ]
    paths:
    - .github/actions/build-intermediate/**
    - .github/workflows/build-opencv-base-container.yml
    - build/containers/intermediate/Dockerfile.opencvsharp-build
    - build/intermediate-containers.mk
    - Makefile
  pull_request_target:
    branches: [ main ]
    paths:
    - .github/actions/build-intermediate/**
    - .github/workflows/build-opencv-base-container.yml
    - build/containers/intermediate/Dockerfile.opencvsharp-build
    - build/intermediate-containers.mk
    - Makefile

env:
  AKRI_COMPONENT: opencvsharp-build
  MAKEFILE_COMPONENT: opencv-base

jobs:

  per-arch:
    if: >-
      !contains(github.event.pull_request.title, '[IGNORE INTERMEDIATE BUILDS]') &&
      !contains(github.event.commits[0].message, '[IGNORE INTERMEDIATE BUILDS]') &&
      (( github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.fork == true ) ||
      ( github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false ) ||
      ( !(startsWith(github.event_name, 'pull_request')) ))
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - arm64v8
          - arm32v7
          - amd64
    steps:
    - name: Checkout the merged commit from PR and base branch
      uses: actions/checkout@v2
      if: github.event_name == 'pull_request_target'
      with:
        # pull_request_target is run in the context of the base repository
        # of the pull request, so the default ref is master branch and
        # ref should be manually set to the head of the PR
        ref: refs/pull/${{ github.event.pull_request.number }}/head

    - name: Checkout the head commit of the branch
      if: ${{ github.event_name != 'pull_request_target' }}
      uses: actions/checkout@v2

    - name: Akri intermediate builds are LONG running and should only be run when absolutely needed
      if: >-
        !contains(github.event.pull_request.title, '[ALLOW INTERMEDIATE BUILDS]') &&
        !contains(github.event.commits[0].message, '[ALLOW INTERMEDIATE BUILDS]')
      run: |
        echo "Akri intermediate builds are LONG running and should only be run when absolutely needed."
        echo "Add [IGNORE INTERMEDIATE BUILDS] to first commit message to skip building intermediate containers."
        echo "Add [ALLOW INTERMEDIATE BUILDS] to first commit message if needed."
        exit 1

    # Only run build version change check if PR title and Merge commit message do NOT contain "[SAME VERSION]"
    - if: >-
        startsWith(github.event_name, 'pull_request') &&
        !contains(github.event.pull_request.title, '[SAME VERSION]') &&
        !contains(github.event.commits[0].message, '[SAME VERSION]')
      name: Ensure that ${{ env.AKRI_COMPONENT }} version has changed
      run: |
        git fetch origin main
        git diff origin/main -- ./build/intermediate-containers.mk | grep "BUILD_OPENCV_BASE_VERSION = " | wc -l | grep -v 0

    - name: Prepare To Install
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Install Deps
      run: |
        yarn install
        yarn add @actions/core @actions/github @actions/exec fs

    - name: Run Per-Arch component build for ${{ env.AKRI_COMPONENT }}
      uses: ./.github/actions/build-intermediate
      with:
        github_event_name: ${{ github.event_name }}
        github_ref: ${{ github.ref }}
        github_event_action: ${{ github.event.action }}
        github_merged: ${{ github.event.pull_request.merged }}
        container_name: ${{ env.AKRI_COMPONENT }}
        container_prefix: ghcr.io/deislabs/akri
        container_registry_base_url: ghcr.io
        container_registry_username: ${{ secrets.crUsername }}
        container_registry_password: ${{ secrets.crPassword }}
        dockerhub_username: ${{ secrets.dhUsername }}
        dockerhub_password: ${{ secrets.dhPassword }}
        makefile_component_name: ${{ env.MAKEFILE_COMPONENT }}
        platform: ${{ matrix.arch }}
