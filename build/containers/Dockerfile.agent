ARG PLATFORM=amd64
ARG CROSS_BUILD_TARGET=x86_64-unknown-linux-gnu
FROM ${PLATFORM}/debian:buster-slim
ARG CROSS_BUILD_TARGET
ARG PLATFORM
ARG BUILD_TYPE=release
RUN echo "Creating container based on ${PLATFORM}/debian:buster-slim"
RUN echo "Using Rust binaries from ${CROSS_BUILD_TARGET}/${BUILD_TYPE}"

# Link the container to the Akri repository
LABEL org.opencontainers.image.source https://github.com/project-akri/akri

# Install crictl and openssl dependencies
RUN apt-get update && apt-get install -y --no-install-recommends libssl-dev openssl wget ca-certificates && \
    echo "Container platform target is ${PLATFORM}" && \
    if [ "$PLATFORM" = "arm32v7" ] ; \
    then export CRICTL_PLATFORM="arm" ; \
    elif [ "$PLATFORM" = "arm64v8" ] ; \
    then export CRICTL_PLATFORM="arm64" ; \
    elif [ "$PLATFORM" = "amd64" ] ; \
    then export CRICTL_PLATFORM="amd64" ; \
    else echo "no PLATFORM provided. Using amd64 for crictl" && export CRICTL_PLATFORM="amd64" ; \
    fi && \
    echo "CRICTL platform target is ${CRICTL_PLATFORM}" && \
    VERSION="v1.17.0" && \
    wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-$CRICTL_PLATFORM.tar.gz -O crictl.tar.gz && \
    tar zxvf crictl.tar.gz -C /usr/local/bin && \
    rm -f crictl.tar.gz && \
    apt-get remove -y wget ca-certificates && apt-get clean

COPY ./target/${CROSS_BUILD_TARGET}/${BUILD_TYPE}/agent /agent
ENV RUST_LOG agent,akri_shared
CMD ["./agent"]
