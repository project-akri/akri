ARG PLATFORM=amd64
ARG WEBHOOK="webhooks/validating/configuration"

FROM rustlang/rust:nightly-slim as builder

ARG WEBHOOK

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libssl-dev \
    pkg-config

WORKDIR /akri

# For: akri_shared::akri::configuration::KubeAkriConfig;
COPY ./shared ./shared

RUN USER=root cargo new --bin ./${WEBHOOK}

# Saves repeatedly building the dependencies
# Because the project doesn't use main, add it here, purely as a throwaway
COPY ${WEBHOOK}/Cargo.toml ./${WEBHOOK}/Cargo.toml
RUN echo "fn main() {}" > ./${WEBHOOK}/src/main.rs
RUN cargo build --release --manifest-path=./${WEBHOOK}/Cargo.toml
RUN rm ./${WEBHOOK}/src/*.rs
RUN rm ./${WEBHOOK}/target/release/deps/webhook_configuration*

COPY ${WEBHOOK}/src/main.rs ./${WEBHOOK}/src
RUN cargo build --release --manifest-path=./${WEBHOOK}/Cargo.toml


FROM ${PLATFORM}/debian:buster-slim as runtime

ARG WEBHOOK

WORKDIR /bin

# Copy from builder and rename to 'server'
COPY --from=builder /akri/${WEBHOOK}/target/release/webhook-configuration /server

RUN apt update \
    && apt install -y --no-install-recommends \
    ca-certificates \
    libssl-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Link the container to the Akri repository
LABEL org.opencontainers.image.source https://github.com/deislabs/akri

# Copy over container legal notice
COPY ./build/container-images-legal-notice.md .

ENTRYPOINT ["/server"]
CMD ["--tls-crt-file=/path/to/crt","--tls-key-file=/path/to/key","--port=8443"]
