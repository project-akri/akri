[package]
name = "agent"
version = "0.12.20"
license = "Apache-2.0"
authors = ["Kate Goldenring <kate.goldenring@microsoft.com>", "<bfjelds@microsoft.com>"]
edition = "2021"
rust-version = "1.73.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
akri-debug-echo = { path = "../discovery-handlers/debug-echo", optional = true }
akri-discovery-utils = { path = "../discovery-utils" }
akri-onvif = { path = "../discovery-handlers/onvif", optional = true }
akri-opcua = { path = "../discovery-handlers/opcua", optional = true }
akri-shared = { path = "../shared" }
akri-udev = { path = "../discovery-handlers/udev", optional = true }
anyhow = "1.0.38"
async-stream = "0.3"
async-trait = "0.1.0"
blake2 = "0.9.0"
env_logger = "0.10.0"
futures = { version = "0.3.1", package = "futures" }
hyper = "0.14.2"
k8s-openapi = { version = "0.17.0", default-features = false, features = ["schemars", "v1_23"] }
kube = { version = "0.80.0",  features = ["derive"] }
kube-runtime = "0.80.0"
lazy_static = "1.4"
log = "0.4"
mockall_double = "0.3.1"
prometheus = { version = "0.12.0", features = ["process"] }
prost = "0.12"
serde = "1.0.104"
serde_derive = "1.0.104"
serde_json = "1.0.45"
serde_yaml = { version = "0.8.11", optional = true }
tokio = { version = "1.0", features = ["rt-multi-thread", "time", "fs", "macros", "net"] }
tokio-stream = { version =  "0.1", features = ["net"] }
tonic = "0.10"
tower = "0.4.8"

[build-dependencies]
tonic-build = "0.10"

[dev-dependencies]
# for testing using a simple discovery handler
akri-debug-echo = { path = "../discovery-handlers/debug-echo" }
akri-discovery-utils = { path = "../discovery-utils", features = ["mock-discovery-handler"] }
akri-onvif = { path = "../discovery-handlers/onvif" }
akri-opcua = { path = "../discovery-handlers/opcua" }
akri-udev = { path = "../discovery-handlers/udev"}
env_logger = "0.10.0"
mock_instant = { version = "0.2", features = ["sync"] }
mockall = "0.12"
serde_yaml = "0.8.11"
tempfile = "3.1.0"

[features]
# To embed discovery handlers, add the desired discovery handler features to default and "agent-full".
# Or set the features when building the agent with
# `cargo build --manifest-path agent/Cargo.toml --features "agent-full onvif-feat opcua-feat udev-feat"`
default = []
onvif-feat = [ "akri-onvif"]
opcua-feat = ["akri-opcua"]
udev-feat = ["akri-udev"]
agent-full = ["serde_yaml", "akri-debug-echo"]
